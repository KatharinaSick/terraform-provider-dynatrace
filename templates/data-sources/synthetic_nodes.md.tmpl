---
layout: ""
page_title: "dynatrace_synthetic_nodes Data Source - terraform-provider-dynatrace"
subcategory: "Synthetic"
description: |-
  The data source `dynatrace_synthetic_nodes` queries for all available Synthetic Nodes
---

# dynatrace_synthetic_nodes (Data Source)

The synthetic locations data source queries for all available Synthetic Nodes. The data source doesn't need to get configured. It always provides the full list of synthetic nodes.

## Example Usage

This example shows how to use the data source `dynatrace_synthetic_nodes` in combination with the resource `dynatrace_synthetic_location`, which requires the IDs of synthetic nodes to execute synthetic tests on.

```terraform
data "dynatrace_synthetic_nodes" "all" {
}

resource "dynatrace_synthetic_location" "Test" {
  name                                  = "Test"
  auto_update_chromium                  = true
  availability_location_outage          = true
  availability_node_outage              = true
  availability_notifications_enabled    = true
  city                                  = "San Francisco de Asis"
  country_code                          = "VE"
  deployment_type                       = "STANDARD"
  latitude                              = 10.0756
  location_node_outage_delay_in_minutes = 3
  longitude                             = -67.5442
  nodes                                 = [ data.dynatrace_synthetic_nodes.all.nodes[index(data.dynatrace_synthetic_nodes.all.nodes.*.hostname, "ip-###-##-##-###.ec2.internal")].id ]
  region_code                           = "04"
}

output "synthetic_nodes" {
  value = data.dynatrace_synthetic_nodes.all.nodes
}

# Outputs:

# synthetic_nodes = tolist([
#   {
#     "active_gate_version" = "1.267.43.20230512-112635"
#     "auto_update" = true
#     "browser_monitors" = true
#     "health_check_status" = "Ok"
#     "hostname" = "ip-###-##-##-###.ec2.internal"
#     "id" = "##########"
#     "ips" = toset([
#       "###.##.##.###",
#     ])
#     "one_agent_routing" = false
#     "operating_system" = "Platform: Linux, Version: 5.15.0-1019-aws, Architecture: amd64, Processors: 2"
#     "player_version" = "1.267.7.20230518-134346"
#     "status" = "Running"
#     "version" = "1.267.13.20230518-162314"
#   },
# ])

```

{{ .SchemaMarkdown | trimspace }}