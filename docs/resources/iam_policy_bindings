---
layout: ""
page_title: "dynatrace_iam_policy_bindings Resource - terraform-provider-dynatrace"
subcategory: "IAM"
description: |-
  The resource `dynatrace_iam_policy_bindings` covers binding policies to user groups via Account Management API for SaaS Accounts
---

# dynatrace_iam_policy_bindings (Resource)

-> This resource is excluded by default in the export utility since it is part of the account management API.

-> This resource requires the API token scope **Allow IAM policy configuration for environments** (`iam-policies-management`)

## Dynatrace Documentation

- Dynatrace IAM Group Permissions - https://www.dynatrace.com/support/help/manage/access-control/user-management-and-sso/manage-groups-and-permissions/iam/iam-group-mgt

- Settings API - https://www.dynatrace.com/support/help/how-to-use-dynatrace/user-management-and-sso/manage-groups-and-permissions/iam/iam-getting-started

## Prerequisites

Using this resource requires an OAuth client to be configured within your account settings.
The scopes of the OAuth Client need to include `account-idm-read`, `account-idm-write`, `account-env-read`, `account-env-write`, `iam-policies-management`, `iam:policies:write`, `iam:policies:read`, `iam:bindings:write`, `iam:bindings:read` and `iam:effective-permissions:read`.

Finally the provider configuration requires the credentials for that OAuth Client.
The configuration section of your provider needs to look like this.
```terraform
provider "dynatrace" {
  dt_env_url   = "https://########.live.dynatrace.com/"
  dt_api_token = "######.########################.################################################################"  

  iam_client_id = "######.########"
  iam_account_id = "########-####-####-####-############"
  iam_client_secret = "######.########.################################################################"  
}
```

## Resource Example Usage

```terraform
resource "dynatrace_iam_group" "my_group" {
  name          = "my_group"

  permissions {
    ...
  }
}

resource "dynatrace_iam_policy" "env_policy" {
  name            = "my_policy_valid_for_environment_siz654##"
  environment     = "siz654##"
  statement_query = "ALLOW settings:objects:read, settings:schemas:read WHERE settings:schemaId = \"string\";"
}

resource "dynatrace_iam_policy_bindings" "env_bindings" {
  group       = dynatrace_iam_group.my_group.id
  environment = "siz654##"
  policies    = [dynatrace_iam_policy.env_policy.id]
}

resource "dynatrace_iam_policy" "acc_policy" {
  name            = "my_policy_valid_for_all_environments_in_this_account"
  account     = "########-####-####-####-############"
  statement_query = "ALLOW settings:objects:read, settings:schemas:read WHERE settings:schemaId = \"string\";"
}

resource "dynatrace_iam_policy_bindings" "acc_bindings" {
  group       = dynatrace_iam_group.my_group.id
  account     = "########-####-####-####-############"
  policies    = [dynatrace_iam_policy.acc_policy.id]
}
```

Policy Bindings to Groups on different levels are required to be specified within separate resources.
The following example would be invalid, because policies the policies to be bound to the group are defined for different levels.

```terraform
resource "dynatrace_iam_group" "my_group" {
  name          = "my_group"

  permissions {
    ...
  }
}

resource "dynatrace_iam_policy" "env_policy" {
  name            = "my_policy_valid_for_environment_siz654##"
  environment     = "siz654##"
  statement_query = "ALLOW settings:objects:read, settings:schemas:read WHERE settings:schemaId = \"string\";"
}

resource "dynatrace_iam_policy" "acc_policy" {
  name            = "my_policy_valid_for_all_environments_in_this_account"
  account     = "########-####-####-####-############"
  statement_query = "ALLOW settings:objects:read, settings:schemas:read WHERE settings:schemaId = \"string\";"
}

resource "dynatrace_iam_policy_bindings" "bindings" {
  group       = dynatrace_iam_group.my_group.id
  account     = "########-####-####-####-############"
  policies    = [dynatrace_iam_policy.acc_policy.id, dynatrace_iam_policy.env_policy.id] # INVALID, because `dynatrace_iam_policy.env_policy` is not defined for the account level
}
```


<!-- schema generated by tfplugindocs -->
## Schema

### Required

- `group` (String) The name of the policy
- `policies` (Set of String) A list of IDs referring to policies bound to that group. It's not possible to mix policies here that are defined for different scopes (different accounts or environments) than specified via attributes `account` or `environment`.

### Optional

- `account` (String) The UUID of the account (`urn:dtaccount:<account-uuid>`). The attribute `policies` must contain ONLY policies defined for that account. The prefix `urn:dtaccount:` MUST be omitted here.
- `environment` (String) The ID of the environment (https://<environmentid>.live.dynatrace.com). The attribute `policies` must contain ONLY policies defined for that environment.
- `id` (String) The ID of this resource.
